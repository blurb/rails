#!/bin/bash

RAILS_VERSION=2.3
DOCKER=docker
DOCKER_COMPOSE=docker-compose
RUBY_VERSIONS=(1.8.7 2.3 2.5)

ROOT_PATH=`dirname $(readlink -f $0)`/..

if ! which $DOCKER > /dev/null || ! which $DOCKER_COMPOSE > /dev/null; then
  echo "Please install $DOCKER and $DOCKER_COMPOSE first."
  exit 2
fi

usage () {
  echo "Commands are"
  echo "  $0 shell <ruby-version>                - Opens a bash shell"
  echo "  $0 run <ruby-version> <command>        - Runs a command"
  echo "  $0 stop                                - Shuts down database services etc"
  echo "  $0 update                              - Fetches updates docker images"
  echo "  $0 clean                               - Cleans up caches etc"
}

set_version () {
  VERSION=$1
  if [ -z $VERSION ]; then
    echo "You need to provide a version"
    usage
    exit 2
  fi
  if [[ ! " ${RUBY_VERSIONS[@]} " =~ " $VERSION " ]]; then
    echo "Version not supported. Supported are"
    for version in ${RUBY_VERSIONS[@]}; do
      echo "  $version"
    done
    exit 2
  fi
  export COMPOSE_PROJECT_NAME="test-env_${RAILS_VERSION}_${VERSION}"
  local COMPOSE_FILE_NAME=docker-compose.$VERSION.yml
  COMPOSE_FILE_PATH=$ROOT_PATH/test-env/$COMPOSE_FILE_NAME
}

stop_all () {
  for version in ${RUBY_VERSIONS[@]}; do
    set_version $version
    $DOCKER_COMPOSE -f $COMPOSE_FILE_PATH stop
  done
}

update_all () {
  for version in ${RUBY_VERSIONS[@]}; do
    set_version $version
    $DOCKER_COMPOSE -f $COMPOSE_FILE_PATH pull
  done
}

clean_all () {
  for version in ${RUBY_VERSIONS[@]}; do
    set_version $version
    $DOCKER_COMPOSE -f $COMPOSE_FILE_PATH rm
  done
}



COMMAND=$1
if [ $# \> 0 ]; then shift; fi

case $COMMAND in
shell)
  set_version $1
  $DOCKER_COMPOSE -f $COMPOSE_FILE_PATH run test-env bash -c "bundle check; bash"
;;
run)
  set_version $1
  if [ $# \> 0 ]; then shift; fi
  $DOCKER_COMPOSE -f $COMPOSE_FILE_PATH run test-env bash -c "bundle check; $(echo $@)"
;;
update)
  update_all
;;
stop)
  stop_all
;;
clean)
  stop_all
  clean_all
;;
*)
  usage
  exit 2
esac
